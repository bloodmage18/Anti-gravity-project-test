[gd_scene load_steps=13 format=3 uid="uid://b13wa4hqbg3my"]

[ext_resource type="Script" path="res://tests/game2.gd" id="1_lookk"]
[ext_resource type="PackedScene" uid="uid://d0qn7awt4wpaj" path="res://tests/level_selector.tscn" id="2_eub6f"]
[ext_resource type="PackedScene" uid="uid://c52vehpgswp13" path="res://tests/new.tscn" id="2_igd6c"]
[ext_resource type="PackedScene" uid="uid://btgi2bpitiuov" path="res://tests/water.tscn" id="2_xuh87"]
[ext_resource type="PackedScene" uid="uid://dj1xnyivyyo6h" path="res://tests/game_control.tscn" id="3_cf3sk"]
[ext_resource type="Script" path="res://tests/safe_zone_transporter.gd" id="4_hebxh"]
[ext_resource type="PackedScene" uid="uid://baxqhri31o14t" path="res://tests/bob2.tscn" id="7_78dmk"]

[sub_resource type="Shader" id="Shader_cacg1"]
code = "shader_type canvas_item;

uniform vec2 scale;
uniform float y_zoom;

uniform vec4 water_color : source_color ;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;

uniform sampler2D noise ;
uniform vec2 distortion_scale ;
uniform float intensity ;
uniform float dist_speed ;

uniform float wave_amplitude ;
uniform float wave_period ;
uniform float wave_speed ;

// altering the figures too much can flip the shoreline
// increased value range use as is
uniform vec4 shorelineColor : source_color = vec4(1.);
uniform float shorelineSize : hint_range(-0.6, 1.0) = 0.0025;
uniform float foamsize : hint_range(0.0, 1.1) = 0.1 ;
uniform float foamstrength : hint_range(0.0, 1.0) = 0.3 ;


void fragment() {
	
	float waves = UV.y * scale.y + sin( UV.x * scale.x / wave_period - TIME*wave_speed ) * cos(0.2 * UV.x * scale.x / wave_period + TIME-wave_speed)
	* wave_amplitude - wave_amplitude ;
	
	float distortion = texture(noise , UV*distortion_scale*scale + TIME*dist_speed).x  ;
	distortion -= 0.3
	 ;
	
	
	float uv_height = SCREEN_PIXEL_SIZE.y / TEXTURE_PIXEL_SIZE.y;
	
	vec2 reflected_screen_uv = vec2(SCREEN_UV.x - (distortion * intensity * y_zoom), SCREEN_UV.y - uv_height * UV.y * y_zoom * scale.y * 2.0);
	
	vec4 reflection = textureLod( SCREEN_TEXTURE , reflected_screen_uv , 0);
	
	
	
	float shoreline = smoothstep(foamsize - shorelineSize, foamstrength, waves);
	
	COLOR.rgb = mix(shorelineColor.rgb, mix(reflection.rgb, water_color.rgb, water_color.a), shoreline );
	COLOR.a = smoothstep(0.1, 0.13, waves);

//	COLOR.rgb = mix(reflection.rgb , water_color.rgb , water_color.a);
//	COLOR.a = smoothstep(0.1 , 0.13 ,waves ) ;
	
	
}"

[sub_resource type="Gradient" id="Gradient_3sl7l"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_lbwq1"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_mhtea"]
invert = true
seamless = true
seamless_blend_skirt = 0.433
color_ramp = SubResource("Gradient_3sl7l")
noise = SubResource("FastNoiseLite_lbwq1")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_wa4as"]
shader = SubResource("Shader_cacg1")
shader_parameter/scale = Vector2(13.13, 4)
shader_parameter/y_zoom = 0.03125
shader_parameter/water_color = Color(0.0392157, 0.415686, 0.768627, 0.364706)
shader_parameter/distortion_scale = Vector2(0.005, 0.033)
shader_parameter/intensity = 0.115
shader_parameter/dist_speed = 0.35
shader_parameter/wave_amplitude = 0.023
shader_parameter/wave_period = 0.058
shader_parameter/wave_speed = 0.64
shader_parameter/shorelineColor = Color(1, 1, 1, 1)
shader_parameter/shorelineSize = 0.027
shader_parameter/foamsize = 0.14
shader_parameter/foamstrength = 0.21
shader_parameter/noise = SubResource("NoiseTexture2D_mhtea")

[node name="Game" type="Node"]
script = ExtResource("1_lookk")
level_markers = Array[NodePath]([NodePath("Node/0"), NodePath("Node/1"), NodePath("Node/2"), NodePath("Node/3"), NodePath("Node/4"), NodePath("Node/5"), NodePath("Node/6")])

[node name="GameLogic" type="Node2D" parent="."]

[node name="World" parent="." instance=ExtResource("2_igd6c")]

[node name="AnimatedSprite2D" parent="World/Node2D/BuildingArea" index="0"]
frame_progress = 0.187133

[node name="water" parent="." instance=ExtResource("2_xuh87")]
material = SubResource("ShaderMaterial_wa4as")
position = Vector2(-190, 6376)
scale = Vector2(35.7396, 4.70588)
offset = Vector2(0, 70)

[node name="Node" type="Node" parent="."]
script = ExtResource("4_hebxh")

[node name="0" type="Marker2D" parent="Node"]
position = Vector2(3216, -3664)

[node name="1" type="Marker2D" parent="Node"]
position = Vector2(-1616, -832)

[node name="2" type="Marker2D" parent="Node"]
position = Vector2(-32, 880)

[node name="3" type="Marker2D" parent="Node"]
position = Vector2(-976, 2816)

[node name="4" type="Marker2D" parent="Node"]
position = Vector2(-6528, 2576)

[node name="5" type="Marker2D" parent="Node"]
position = Vector2(-3616, 5488)

[node name="6" type="Marker2D" parent="Node"]
position = Vector2(3712, 5456)

[node name="CanvasLayer" type="CanvasLayer" parent="."]
process_mode = 3

[node name="Game_control" parent="CanvasLayer" instance=ExtResource("3_cf3sk")]
offset_bottom = 0.0

[node name="Level_Control" parent="CanvasLayer" instance=ExtResource("2_eub6f")]
offset_right = 0.0
offset_bottom = 160.0
size_flags_horizontal = 0
level_markers = Array[NodePath]([NodePath("../../Node/0"), NodePath("../../Node/1"), NodePath("../../Node/2"), NodePath("../../Node/3"), NodePath("../../Node/4"), NodePath("../../Node/5"), NodePath("../../Node/6")])

[node name="player" type="Node" parent="."]

[node name="bob" parent="player" instance=ExtResource("7_78dmk")]
position = Vector2(3200, -3968)

[editable path="World"]
[editable path="CanvasLayer/Game_control"]
